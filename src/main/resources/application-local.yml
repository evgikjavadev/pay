server:
  port: 8085

spring:
  security:
    oauth2:
      client:
        registration:
          epa-session-client:
            provider: epa-session-client
            client-id: test@app.b2c.vtb.ru
            client-secret: EDCF-1847!$imserv
            authorization-grant-type: client_credentials
          epa-tyk-client:
            provider: epa-tyk-client
            client-id: mobc-simserv-ift@tech.b2c.vtb.ru
            client-secret: EDCF-1847!$imserv
            authorization-grant-type: client_credentials
        provider:
          epa-session-client:
            token-uri: http://localhost:8070/passport/tech/oauth2/token
          epa-tyk-client:
            token-uri: http://localhost:8070/passport/oauth2/token
  datasource:
    hikari:
      driver-class-name: org.postgresql.Driver
      jdbc-url: jdbc:postgresql://localhost:5432/postgres1
      username: postgres
      password: 123
  jmx:
    default-domain: some
  codec:
    max-in-memory-size: 5MB

audit:
  local-mode: true
  kafka:
    bootstrap:
      server: d5mobc-kfc001lk.corp.dev.vtb:9092
    consumer:
      group-id: audit-management
    topic: audit
    ssl:
      enabled: false
  # нужно только для @AuditProcess, @Audit получает эти параметры из токена
  default-resolver:
    sub: sub_from_kafka
    channel: channel_from_kafka

ms.properties.infoSystemCode: RFRM
ms.properties.infoSystemId: 1800

omni-jwt-common:
  security:
    enabled: true
  token-validate:
    enable: false
  issuers:
    epa:
      issuer: "http://epa.iss"
      url: "http://localhost:8070/jwks/epa"

opentracing:
  jaeger:
    enabled: false
    log-spans: true
    service-name: RFRM.rfrm-consultations

#Трассировка
ru:
  vtb:
    tstr:
      client-starter:
        enabled: false
      kafka:
        bootstrap-servers: "d5mobc-kfc002lk.corp.dev.vtb:9092"

ms:
  frame-link: 'gui-vtbmobile.test.vtb.ru'
  token-checking:
    enabled: false

app:
  version: 0.0.0.1

epa-anti-replay:
  epa-endpoint: http://localhost:8070/passport/jti?{jti}

product-profile-fl-accounts:
  url: http://localhost:8070
  resource: /portfolio/portfolio-agregator/portfolio/active
  headers:
    X-INITIATOR-SERVICE: rfrm-pay
  retry:
    count: 3
    duration: 2000

aclib:
  replication:
    enabled: false
  ac:
    token:
    service-name: kafka-astra-0388
  kafka:
    bootstrap-servers: localhost:9092
    security:
      protocol: PLAINTEXT
    ssl:
      enabled: false
      truststore:
        # при локальном запуске в режиме ssl необходимо указать абсолютный путь
        location: ''
        password: ''
      keystore:
        # при локальном запуске в режиме ssl необходимо указать абсолютный путь
        location: ''
        password: ''
      key:
        password:
      truststore-type: 'JKS'
      keystore-type: 'JKS'

logging:
  level:
    ROOT: INFO
    ru.vtb.omni: INFO
    ru.vtb.omni.ac: DEBUG
    ru.vtb.msa: DEBUG
    org.apache.http: INFO
    ru.vtb.omni.audit: INFO
    ru.vtb.msa.partner: DEBUG
    ru.vtb.msa.rfrm.integration: DEBUG
    ru.vtb.msa.mdclogging: DEBUG

feature.toggle:
  roleModelToggle:
    roleOn: false
  asynToggle:
    asynOn: true


#1642 Платформа анализа и обработки данных;
process.platform:
  kafka:
    bootstrap:
      server: localhost:9092
    consumer:
      group-id: pay
    topic:
      questionnaires: rewardreq
    max.poll.records: 10
    security:
      protocol: PLAINTEXT
    ssl:
      enabled: false
      truststore:
        location: ""
        password: ""
      keystore:
        location: ""
        password: ""
      key:
        password: ""
      truststore-type: 'JKS'
      keystore-type: 'JKS'


#      consumer:
#        properties:
#          spring.json.trusted.packages: "ru.vtb."

#      auto:
#        create:
#          topics:
#            enable: true

#фоновый процесс
data.event:
  enable: false
  kafka:
    servers: kafka-service:9092
    security:
      protocol: PLAINTEXT
    ssl:
      # обязательные, если установлен параметр: security.protocol: SSL
      truststore:
        location: ""
        password: ""
        type: 'JKS'
      keystore:
        location: ""
        password: ""
        type: 'JKS'
      key:
        password: ""
      endpoint:
        identification:
          algorithm: ""